package com.andrey.hybridchat

import android.content.Intent // <--- –í–û–¢ –°–Æ–î–ê
import android.util.Log
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.firestore.FirebaseFirestore
import com.google.firebase.firestore.SetOptions
import com.google.firebase.messaging.FirebaseMessagingService
import com.google.firebase.messaging.RemoteMessage

class MyFirebaseMessagingService : FirebaseMessagingService() {

    override fun onNewToken(token: String) {
        super.onNewToken(token)
        Log.d("FCM_TOKEN", "–ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: $token")
        // –í—ã–∑—ã–≤–∞–µ–º –Ω–∞—à—É –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
        saveTokenToFirestore(token)
    }

    override fun onMessageReceived(message: RemoteMessage) {
        super.onMessageReceived(message)

        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –∏–∑ –Ω–∞—à–µ–π Cloud Function
        val data = message.data
        val type = data["type"]

        Log.d("FCM_MESSAGE", "–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞: $type —Å –¥–∞–Ω–Ω—ã–º–∏: $data")

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—Ö–æ–¥—è—â–µ–º –∑–≤–æ–Ω–∫–µ
        if (type == "incoming_call") {
            val senderName = data["sender_name"]
            val channelName = data["channel_name"]

            if (senderName != null && channelName != null) {
                // –°–æ–∑–¥–∞–µ–º –Ω–∞–º–µ—Ä–µ–Ω–∏–µ (Intent) –æ—Ç–∫—Ä—ã—Ç—å —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞
                val intent = Intent(this, CallActivity::class.java).apply {
                    // –û—á–µ–Ω—å –≤–∞–∂–Ω–æ! –≠—Ç–æ—Ç —Ñ–ª–∞–≥ –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å Activity –∏–∑ —Å–µ—Ä–≤–∏—Å–∞,
                    // –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ.
                    addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)

                    // –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω –∑–≤–æ–Ω–∫–∞ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
                    putExtra("IS_INCOMING_CALL", true) // –§–ª–∞–≥, —á—Ç–æ —ç—Ç–æ –≤—Ö–æ–¥—è—â–∏–π, –∞ –Ω–µ –∏—Å—Ö–æ–¥—è—â–∏–π
                    putExtra("USER_NAME", senderName)
                    putExtra("CHANNEL_ID", channelName)
                }
                startActivity(intent)
            }
        }
    }

    // üëá –§–£–ù–ö–¶–ò–Ø, –ö–û–¢–û–†–£–Æ –Ø –î–û–ë–ê–í–ò–õ üëá
    private fun saveTokenToFirestore(token: String) {
        // –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏ –Ω–∏–∫—Ç–æ –Ω–µ –≤–æ—à–µ–ª, –≤—ã—Ö–æ–¥–∏–º.
        val userId = FirebaseAuth.getInstance().currentUser?.uid ?: return

        // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ "users"
        val userDocRef = FirebaseFirestore.getInstance().collection("users").document(userId)

        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º –¥–ª—è —Ç–æ–∫–µ–Ω–∞
        val tokenData = hashMapOf(
            "fcmToken" to token
        )

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç, –¥–æ–±–∞–≤–ª—è—è –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—è –ø–æ–ª–µ fcmToken
        userDocRef.set(tokenData, SetOptions.merge())
            .addOnSuccessListener {
                Log.d("FCM_TOKEN", "–¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Firestore –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $userId")
            }
            .addOnFailureListener { e ->
                Log.e("FCM_TOKEN", "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞ –≤ Firestore", e)
            }
    }
}